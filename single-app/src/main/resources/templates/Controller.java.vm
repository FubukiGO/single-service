/*
 *    Copyright (c) 2018-2025, lengleng All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * Neither the name of the baba.com developer nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 * Author: yukang (wzysz555@gmail.com)
 */
package ${cfg.package}.${cfg.moduleName}.controller;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import com.ygg.baba.common.util.R;
import ${cfg.package}.${cfg.moduleName}.entity.${entity};
import ${cfg.package}.${cfg.moduleName}.service.${entity}Service;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import java.util.Map;

/**
 * $!{table.comment} 前端控制器
 *
 * @author ${cfg.author}
 * @date ${cfg.datetime}
 */
@Slf4j
@Api(tag = "${table.comment}")
@RestController
@AllArgsConstructor
@RequestMapping("${table.entityPath}")
public class ${table.controllerName} extends ${superControllerClass}{

  private final  ${entity}Service ${table.entityPath}Service;

  /**
   * 简单分页查询
   * @param page 分页对象
   * @param ${entity} ${table.comment}
   * @return
   */
  @PostMapping("page")
  @ApiOperation(value = "分页查询${table.comment}", notes = "limit,page必传", response = $!{entity}.class)
  public R<IPage<${entity}>> get${entity}Page(@RequestBody Map params) {
    return  new R<>(${entity}Service.get${table.entityPath}Page(new Query(params), params));
  }


  /**
   * 通过id查询单条记录
   * @param id
   * @return R
   */
  @GetMapping("{id}")
  public R<${entity}> getById(@PathVariable("id") Integer id){
    return new R<>(${table.entityPath}Service.getById(id));
  }

  /**
   * 新增记录
   * @param ${entity}
   * @return R
   */
  @PostMapping
  @ApiOperation(value = "新增${table.comment}", notes = "", response = $!{entity}.class)
  public R save(@RequestBody ${entity} ${table.entityPath}){
    return new R<>(${table.entityPath}Service.save(${table.entityPath}));
  }

  /**
   * 修改记录
   * @param ${table.entityPath}
   * @return R
   */
  @PutMapping
  @ApiOperation(value = "修改${table.comment}", notes = "", response = $!{entity}.class)
  public R update(@RequestBody ${entity} ${table.entityPath}){
    return new R<>(${table.entityPath}Service.updateById(${table.entityPath}));
  }

  /**
   * 通过id删除一条记录
   * @param id
   * @return R
   */
  @DeleteMapping("{id}")
  @ApiOperation(value = "删除${table.comment}", notes = "", response = $!{entity}.class)
  public R removeById(@PathVariable Integer id){
    return new R<>(${table.entityPath}Service.removeById(id));
  }

}
